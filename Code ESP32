#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <WiFi.h>
#include <UniversalTelegramBot.h>

#include <DHT.h>
#include <DHT_U.h>

#define DHTPIN 27    //D27 del ESP27 Dev Module
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

#define oled 32
Adafruit_SSD1306 display = Adafruit_SSD1306(128, oled, &Wire);

// Configura la red Wi-Fi
const char* ssid = "AP_asix";
const char* password = "AP_asix2023";

// Configura la clave y el chat ID de tu bot de Telegram
const char* token = "tu_token";
const int chatId = tu_chat_id;

// Inicializa el cliente de Telegram
WiFiClientSecure client;
UniversalTelegramBot bot(token, client);

void setup() {
  Serial.begin(9600);
  dht.begin();
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); // Address 0x3C for 128x32
  display.display();
  display.clearDisplay();
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE,BLACK);

  // Conéctate a la red Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  delay(2000);
  // Guarda los valores del sensor
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();
  // Muestra los valores del sensor por el monitor serie
  Serial.print(humidity, 1);
  Serial.print("\t\t");
  Serial.print(temperature, 1);
  Serial.println("\t\t");
  // Prepara el formato de datos para publicar
  char humidityChar[6];
  dtostrf(humidity, 5, 1, humidityChar); //Conversión a char
  char temperatureChar[6];
  dtostrf(temperature, 5, 1, temperatureChar); //Conversión a char
  // Imprime en la pantalla OLED
  display.clearDisplay();
  display.setCursor(0, 0);
  if (temperature >= 78) {
    display.print("La temperatura de la sala del servidor es muy elevada");
    display.display();
    enviarMensajeTelegram("Temperatura alta: " + String(temperatureChar));
  } else if (humidity >= 80) {
    display.print("La humedad de la sala del servidor es muy alta");
    display.display();
    enviarMensajeTelegram("Humedad alta: " + String(humidityChar));
  } else {
    display.print("Todo en orden :D");
    display.clearDisplay();
    display.setCursor(0, 0);
    display.print("Temp:");
    display.println(temperatureChar);
    display.print("Hum: ");
    display.print(humidityChar);
    display.print("%");
    display.display();
  }
}

// Función para enviar un mensaje al bot de Telegram
void enviarMensajeTelegram(String mensaje) {
  if (WiFi.status() == WL_CONNECTED) {
    if (!bot.sendMessage(chatId, mensaje, "Markdown")) {
      Serial.println("Error al enviar el mensaje a Telegram");
    } else {
      Serial.println("Mensaje enviado a Telegram");
    }
  } else {
    Serial.println("Error de conexión Wi-Fi");
  }
}
